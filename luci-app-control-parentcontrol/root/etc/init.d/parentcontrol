#!/bin/sh /etc/rc.common
#
# Copyright (C) 2015 OpenWrt-dist 
# 

START=98

add_rules() {
mmode=$1
rulessum=$(grep -c $mmode /etc/config/parentcontrol)
for i in $(seq 0 $((rulessum-1)))
do
enable=$(uci get parentcontrol.@$mmode[$i].enable 2>/dev/null)
if [ "$enable" == 1 ]; then
 macaddr=$(uci get parentcontrol.@$mmode[$i].macaddr 2>/dev/null) && MAC="-m mac --mac-source $macaddr" || MAC=""
 keyword=$(uci get parentcontrol.@$mmode[$i].keyword 2>/dev/null) && STG="-m string --string ${keyword} --algo ${algos}" || STG=""
 proto=$(uci get parentcontrol.@$mmode[$i].proto 2>/dev/null) || proto="tcp"
 sport=$(uci get parentcontrol.@$mmode[$i].sport 2>/dev/null) && SPT="--sport ${sport}" || SPT=""
 dport=$(uci get parentcontrol.@$mmode[$i].dport 2>/dev/null) && DPT="--dport ${dport}" || DPT=""
 havesMPT=`echo "$sport"|grep ","` && sMPT="-m multiport" || sMPT=""
 havedMPT=`echo "$dport"|grep ","` && dMPT="-m multiport" || dMPT=""
 [ -z "$sport" -a -z "$dport" ] && PTS="" || PTS="-p ${proto} ${sMPT} ${SPT} ${dMPT} ${DPT}"
 timestart=$(uci get parentcontrol.@$mmode[$i].timeon 2>/dev/null) || timestart="00:00"
 timestop=$(uci get parentcontrol.@$mmode[$i].timeoff 2>/dev/null) ||  timestop="00:00"
 week_days=$(uci get parentcontrol.@$mmode[$i].daysofweek |sed 's/ /,/g' 2>/dev/null)
 [ "$timestart" = "$timestop" ] && TIME="" || TIME="--timestart ${timestart} --timestop ${timestop}"
 [ -z "$week_days" -o "$week_days" = "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday" ] && WEEK="" || WEEK="--weekdays ${week_days}"
 [ -n "$TIME" -o -n "$WEEK" ] && TME="-m time --kerneltz ${TIME} ${WEEK}" || TME=""
 if [ -n "$keyword" -o -n "$MAC" -o -n "$sport" -o -n "$dport" ]; then
  iptables  -A PARENTCONTROL ${MAC} ${PTS} ${TME} ${STG} -j REJECT 2>/dev/null
  ip6tables -A PARENTCONTROL ${MAC} ${PTS} ${TME} ${STG} -j REJECT 2>/dev/null
 fi
fi
done
}

add_rules_black() {

L=$(cat /etc/parentcontrol/black.list)
	for i in $L;do
                 keyword=$i && STG="-m string --string ${keyword} --algo ${algos}" || STG=""
 		 if [ -n "$keyword" ]; then
  			iptables  -A PARENTCONTROL ${STG} -j REJECT 2>/dev/null
  			ip6tables -A PARENTCONTROL ${STG} -j REJECT 2>/dev/null
 		 fi
	done
}

start(){
enabled=`uci get parentcontrol.@basic[0].enabled 2>/dev/null`
if [ "$enabled" == 1 ]; then
	ENsum=`grep -c 'enable .1.' /etc/config/parentcontrol`
	if [ "$ENsum" -gt 0 -o $control_mode=="black_mode" ]; then

	     
 	     algos=`uci get parentcontrol.@basic[0].algos 2>/dev/null`
	     iptables  -N PARENTCONTROL 2>/dev/null || iptables  -F PARENTCONTROL 2>/dev/null
	     ip6tables -N PARENTCONTROL 2>/dev/null || ip6tables -F PARENTCONTROL 2>/dev/null
	     iptables  -C FORWARD -j PARENTCONTROL 2>/dev/null || iptables  -I FORWARD -j PARENTCONTROL
	     ip6tables -C FORWARD -j PARENTCONTROL 2>/dev/null || ip6tables -I FORWARD -j PARENTCONTROL

	     add_rules macbind
	     add_rules macbind3
	     control_mode=`uci get parentcontrol.@basic[0].control_mode 2>/dev/null`
    	     case $control_mode in
		custom_mode)  
			add_rules macbind2;;
 	     	black_mode) 
     			add_rules_black;;
 		esac
	     grep 'parentcontrol' /etc/firewall.user || echo "/etc/init.d/parentcontrol restart" >> /etc/firewall.user
      fi
fi
}

stop(){
	sed -i '/parentcontrol/d' /etc/firewall.user 2>/dev/null
	iptables  -D FORWARD -j PARENTCONTROL 2>/dev/null
	ip6tables -D FORWARD -j PARENTCONTROL 2>/dev/null
	iptables  -F PARENTCONTROL 2>/dev/null
	ip6tables -F PARENTCONTROL 2>/dev/null
	iptables - X PARENTCONTROL 2>/dev/null
	ip6tables -X PARENTCONTROL 2>/dev/null
}

